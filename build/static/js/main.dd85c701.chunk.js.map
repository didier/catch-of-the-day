{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","components/Order.js","components/Fish.js","sample-fishes.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","console","log","storeName","current","value","props","history","push","action","className","onSubmit","this","htmlFor","type","ref","required","name","placeholder","defaultValue","Component","Header","tagline","age","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","fish","price","parseFloat","status","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","onClick","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","async","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","Object","keys","fishes","map","key","loadSampleFishes","Order","renderOrder","count","order","isAvailable","trasitionOptions","classNames","timeout","enter","exit","component","removeFromOrder","orderIds","total","reduce","prevTotal","Fish","details","src","alt","disabled","addToOrder","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.dd85c701.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"nl-NL\", {\n    style: \"currency\",\n    currency: \"EUR\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport { getFunName } from '../helpers';\nimport PropTypes from 'prop-types'\n\nclass StorePicker extends React.Component {\n  myInput = React.createRef()\n\n\n  static propTypes = {\n    history: PropTypes.object,\n  }\n\n  goToStore = event => {\n    event.preventDefault()\n    console.log('Going to store!');\n    const storeName = this.myInput.current.value\n    this.props.history.push(`/store/${storeName}`)\n  }\n\n  render() {\n    return (\n      <form action=\"\" className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please enter a store.</h2>\n        <label htmlFor=\"store\">\n          <p> Enter Store Name</p>\n        </label>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          name=\"store\"\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nconst Header = ({ tagline, age }) => (\n  <header className=\"top\">\n    <h1>Catch <span className=\"ofThe\"><span className=\"of\">of</span> <span className=\"the\">the</span></span> Day</h1>\n    <h3 className=\"tagLine\">\n      <span>{tagline}</span>\n    </h3>\n  </header>\n)\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n}\n\nexport default Header","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass AddFishForm extends Component {\n\n  nameRef = React.createRef()\n  priceRef = React.createRef()\n  statusRef = React.createRef()\n  descRef = React.createRef()\n  imageRef = React.createRef()\n\n  static propTypes = {\n    addFish: PropTypes.func\n  }\n\n  createFish = event => {\n    event.preventDefault()\n\n    // Make new fish object from form data\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value,\n    }\n\n    this.props.addFish(fish)\n\n    // Reset form\n    event.currentTarget.reset()\n  }\n\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} required type=\"text\" placeholder=\"Name\" />\n        <input name=\"price\" ref={this.priceRef} required type=\"number\" placeholder=\"Price\" />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} required type=\"text\" placeholder=\"Desc\" />\n        <input name=\"image\" ref={this.imageRef} required type=\"text\" placeholder=\"Image\" />\n        <button type=\"submit\">+ Add fish</button>\n      </form>\n    )\n  }\n}\n\nexport default AddFishForm","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass EditFishForm extends Component {\n\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func\n  }\n\n  handleChange = (event) => {\n    // console.log(event.currentTarget.value);\n    // Update fish\n\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value\n    }\n\n    this.props.updateFish(this.props.index, updatedFish)\n\n\n  }\n  render() {\n    return (\n      <div className=\"fish-edit\" >\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name} />\n        <input\n          type=\"number\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price} />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}>\n        </textarea>\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image} />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>Remove</button>\n      </div>\n    )\n  }\n}\n\nexport default EditFishForm\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Login = (props) => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button className=\"github\" onClick={() => props.authenticate('Github')}>Log in with Github</button>\n  </nav>\n)\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n}\n\nexport default Login","import Rebase from 're-base'\nimport firebase from 'firebase'\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyCxUZFQxfexWTWVL8tlBJlYXeILjtiJQlA\",\n  authDomain: \"catz-cotd.firebaseapp.com\",\n  databaseURL: \"https://catz-cotd.firebaseio.com\",\n  // projectId: \"catz-cotd\",\n  // storageBucket: \"catz-cotd.appspot.com\",\n  // messagingSenderId: \"620625037709\",\n  // appId: \"1:620625037709:web:894a1209a5804ac0aed5c4\"\n})\n\nconst base = Rebase.createClass(firebaseApp.database())\n\n// Named export \nexport { firebaseApp }\n\n// This is a default export\nexport default base","import React, { Component } from 'react'\nimport AddFishForm from './AddFishForm'\nimport EditFishForm from './EditFishForm'\nimport Login from './Login'\nimport PropTypes from 'prop-types'\nimport base, { firebaseApp } from '../base'\nimport firebase from 'firebase'\n\nclass Inventory extends Component {\n\n  static propTypes = {\n    fishes: PropTypes.object.isRequired,\n    updateFish: PropTypes.func.isRequired,\n    deleteFish: PropTypes.func.isRequired,\n    loadSampleFishes: PropTypes.func.isRequired\n  }\n\n\n  state = { uid: null, owner: null }\n  authHandler = async authData => {\n    // 1. Look up the current store in the firebase database\n    const store = await base.fetch(this.props.storeId, { context: this })\n    console.log(store);\n\n    // 2. Claim it if there is no owner\n    if (!store.owner) {\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      })\n    }\n    // 3. Set the state of the inventory to reflect the current user\n    console.log(authData);\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    })\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user })\n      }\n    })\n  }\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler)\n  }\n\n  logout = async () => {\n    console.log('Logging out.')\n    await firebase.auth().signOut()\n\n    this.setState({ uid: null })\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Log out</button>\n\n    // 1. Check if user is logged in.\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />\n    }\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry, you are not the owner.</p>\n          {logout}\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish} />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n      </div>\n    )\n\n  }\n}\n\nexport default Inventory","import React, { Component } from 'react'\nimport { formatPrice } from '../helpers'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport PropTypes from 'prop-types'\n\nclass Order extends Component {\n\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  }\n\n  renderOrder = (key) => {\n    const fish = this.props.fishes[key]\n    const count = this.props.order[key]\n    const isAvailable = fish && fish.status === 'available'\n\n    const trasitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: {\n        enter: 500, exit: 500\n      }\n    }\n    // Make sure fish is loaded before we render unavailable\n    if (!fish) return null\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...trasitionOptions}>\n          <li key={key}>Sorry, {fish ? fish.name : 'fish'} is no longer available.</li>\n        </CSSTransition>\n      )\n    }\n\n    return (\n      <CSSTransition {...trasitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\" >\n              <CSSTransition classNames=\"count\" key={count} timeout={{ enter: 250, exit: 250 }} >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            kg {fish.name}\n\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n          </button>\n          </span>\n        </li>\n      </CSSTransition>\n    )\n  }\n\n  render() {\n    const orderIds = Object.keys(this.props.order)\n\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key]\n      const count = this.props.order[key]\n      const isAvailable = fish && fish.status === 'available'\n\n      if (isAvailable) {\n        return prevTotal + count * fish.price\n      }\n\n      return prevTotal\n    }, 0)\n\n    return (\n      <div className=\"order\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"order-total\">\n          Total: <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Order","import React, { Component } from 'react'\nimport { formatPrice } from '../helpers'\nimport PropTypes from 'prop-types'\n\nclass Fish extends Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func\n  }\n  render() {\n    // Destructure details to separate variables\n    const { image, name, price, desc, status } = this.props.details\n    // Check availability\n    const isAvailable = status === 'available'\n\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">{name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.index)}\n          className=\"order\">\n          {isAvailable ? 'Add to order' : 'Sold out'}\n        </button>\n      </li>\n    )\n  }\n}\n\nexport default Fish","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React, { Component } from 'react'\nimport Header from './Header'\nimport Inventory from './Inventory'\nimport Order from './Order'\nimport Fish from './Fish'\nimport sampleFishes from '../sample-fishes'\nimport base from '../base'\nimport PropTypes from 'prop-types'\n\n\nclass App extends Component {\n\n  // Global State\n  state = {\n    fishes: {},\n    order: {}\n  }\n\n  static propTypes = {\n    match: PropTypes.object\n  }\n\n  componentDidMount() {\n    // Sync state with firebase\n    const { params } = this.props.match\n\n    // Check if localstorage exists, else sync to this.state.\n    const localStorageRef = localStorage.getItem(params.storeId)\n    if (localStorageRef) {\n      this.setState({\n        order: JSON.parse(localStorageRef)\n      })\n    }\n\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: 'fishes'\n    })\n  }\n\n  componentDidUpdate() {\n    // Update localstorage with storeID and current order state\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order))\n  }\n\n  componentWillUnmount() {\n    // Remove binding from firebase right before unmount to prevent memory leak\n    base.removeBinding(this.ref)\n  }\n\n  addFish = fish => {\n\n    // Copy fishes object\n    const fishes = { ...this.state.fishes }\n\n    // add new fish with timestamp as key\n    fishes[`fish${Date.now()}`] = fish\n\n    // push new fish to stat\n    this.setState({ fishes })\n  }\n\n  updateFish = (key, updatedFish) => {\n    // 1. Copy current state\n    const fishes = { ...this.state.fishes }\n    // 2. Update that state\n    fishes[key] = updatedFish\n    // 3. Set that to state\n    this.setState({ fishes })\n  }\n\n  deleteFish = (key) => {\n    // Copy state\n    const fishes = { ...this.state.fishes }\n    // Update the state\n    fishes[key] = null\n    // 3. Set that to state\n    this.setState({ fishes })\n  }\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes })\n  }\n\n  addToOrder = (key) => {\n    // Take a copy of State\n    const order = { ...this.state.order }\n\n    // Add to order OR increment order\n    order[key] = order[key] + 1 || 1\n\n    // Set to state\n    this.setState({ order })\n\n  }\n\n  removeFromOrder = (key) => {\n    const order = { ...this.state.order }\n    delete order[key]\n    this.setState({ order })\n  }\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                addToOrder={this.addToOrder}\n                details={this.state.fishes[key]} />\n            ))}\n          </ul>\n        </div>\n\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react'\n\nconst NotFound = () => (\n  <h1>Not found...</h1>\n)\n\nexport default NotFound","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route exact path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n)\n\nexport default Router","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router />, document.querySelector('#main'));\n"],"sourceRoot":""}